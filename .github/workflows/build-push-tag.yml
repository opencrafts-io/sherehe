name: Build, Test, and Push Sherehe Backend (Prod or Dev)

on:
  push:
    branches:
      - '**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: shereheuser
          POSTGRES_PASSWORD: secretpassword
          POSTGRES_DB: sherehe
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U shereheuser -d sherehe"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      NODE_ENV: test
      PORT: 3000
      DB_USER: shereheuser
      DB_PASSWORD: secretpassword
      DB_NAME: sherehe
      DB_HOST: localhost
      DB_PORT: 5432
      PGUSER: shereheuser
      PGPASSWORD: secretpassword
      PGDATABASE: sherehe
      PGHOST: localhost
      PGPORT: 5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U "$DB_USER"; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Run migrations
        run: npx node-pg-migrate up

      - name: Run tests
        run: npm test

      - name: Install pack CLI
        run: |
          curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.33.0/pack-v0.33.0-linux.tgz" | tar -xz
          sudo mv pack /usr/local/bin/pack

      - name: Cache CNB Layers
        uses: actions/cache@v4
        with:
          path: ~/.cache/pack
          key: cnb-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cnb-${{ runner.os }}-${{ github.ref }}
            cnb-${{ runner.os }}

      - name: Set Docker tags
        id: tags
        run: |
          BRANCH=$(echo "${GITHUB_REF##*/}" | tr '[:upper:]' '[:lower:]' | tr '/' '-')
          SHA=$(git rev-parse --short HEAD)

          if [ "$BRANCH" = "main" ]; then
            IMAGE_TAG="prod"
            IMAGE_BASE="${{ secrets.DOCKERHUB_USERNAME }}/sherehe-backend-prod"
          else
            IMAGE_TAG="dev"
            IMAGE_BASE="${{ secrets.DOCKERHUB_USERNAME }}/sherehe-backend-staging"
          fi

          echo "image_base=$IMAGE_BASE" >> $GITHUB_OUTPUT
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "sha_tag=$SHA" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push Docker image with Buildpacks
        run: |
          IMAGE_BASE=${{ steps.tags.outputs.image_base }}
          IMAGE_TAG=${{ steps.tags.outputs.image_tag }}
          SHA_TAG=${{ steps.tags.outputs.sha_tag }}

          for TAG in "$IMAGE_TAG" "$SHA_TAG"; do
            echo "ðŸ”¨ Building and pushing $IMAGE_BASE:$TAG"
            pack build "$IMAGE_BASE:$TAG" \
              --builder paketobuildpacks/builder:base \
              --env NODE_ENV=production \
              --cache "type=build;format=volume" \
              --publish
          done
